name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install buildozer cython

    - name: Build exe
      run: |
        pyinstaller --onefile music.py
        mkdir -p dist/exe
        mv dist/music dist/exe/music.exe

    - name: Build apk
      run: |
        sudo apt update
        sudo apt install -y build-essential ccache git libncurses5 libffi-dev libssl-dev
        buildozer init
        sed -i 's/# (str) Title of your application/(str) Title of your application = MusicPlayer/' buildozer.spec
        sed -i 's/# (str) Package name/(str) Package name = com.example.musicplayer/' buildozer.spec
        sed -i 's/# (str) Source code directory/(str) Source code directory = ./' buildozer.spec
        buildozer -v android debug
        mkdir -p dist/apk
        mv bin/*.apk dist/apk/

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/exe/music.exe
        asset_name: music.exe
        asset_content_type: application/octet-stream

    - name: Upload APK Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/apk/*.apk
        asset_name: music.apk
        asset_content_type: application/vnd.android.package-archive